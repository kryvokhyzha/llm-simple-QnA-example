[tool.poetry]
name = "llm-simple-QnA-example"
version = "0.0.1"
description = "Simple Question and Answering example using LLMs and LangChain"
authors = ["Roman Kryvokhyzha <kriwohizha@gmail.com>"]
keywords = ["LanhChain", "LLM"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10, <3.12"

numpy = {version = "^1.23.5", optional = false}
pandas = {version = "^2.0.0", optional = false}
matplotlib = {version = ">=3.2, <=3.7.3", optional = false}
seaborn = {version = "^0.13.0", optional = false}
rootutils = {version = "^1.0.7", optional = false}
ipython = {version = "^8.20.0", optional = false}
ipywidgets = {version = "^8.1.1", optional = false}
redis = {version = "^5.0.1", optional = false}
openai = {version = "^1.10.0", optional = false}
tiktoken = {version = "^0.5.2", optional = false}
unstructured = {version = "^0.12.2", optional = false, extras = ["all-docs"]}
trulens-eval = {version = "^0.21.0", optional = false}
openpyxl = {version = "^3.1.2", optional = false}
wikipedia = {version = "^1.4.0", optional = false}
#atlassian-python-api = {version = "^3.41.9", optional = false}
langchain = {version = "0.1.6", optional = false}
langgraph = {version = "0.0.24", optional = false}
langserve = {version = "0.0.41", optional = false}
sse-starlette = {version = "^2.0.0", optional = false}
httpx-sse = {version = "^0.4.0", optional = false}
#langchain-community = {version = "0.0.16", optional = false}
langchain-openai = {version = "0.0.5", optional = false}
#llama-index = {version = "0.9.39", optional = false}
qdrant-client = {version = "^1.7.0", optional = false}
pypdf = {version = "^3.17.4", optional = false}
py-itree = {git = "https://github.com/juncongmoo/itree", tag = "v0.0.18", optional = false}
#py-itree = {version = "0.0.18", optional = false}

fastapi = {version = "^0.109.0", optional = false}
uvicorn = {version = "^0.27.0", optional = false}
loguru = {version = "^0.7.2", optional = false}
#langcorn = {version = "^0.0.22", optional = false}

#lark = {version = "^1.1.8", optional = false}
#openai = {version = "^1.6.1", optional = false}

#bitsandbytes = {version = "^0.40.0", optional = false}
torch = {version = "^2.0.1", optional = false}
transformers = {git = "https://github.com/huggingface/transformers", tag = "v4.36.2", optional = false}
sentence-transformers = {version = "^2.2.2", optional = false}
#accelerate = {version = "^0.21.0", optional = false}
#gpt4all = {version = "^2.0.2", optional = false}
#peft = {git = "https://github.com/huggingface/peft.git", tag="v0.7.1", optional = false}
#xformers = {version = "^0.0.20", optional = false}
#einops = {version = "^0.6.1", optional = false}
#ctransformers = {version = "^0.2.27", optional = false}

# gguf models
pyllama = {version = "^0.0.9", optional = false}
pyllamacpp = {version = "^2.4.2", optional = false}
llama-cpp-python = {version = "^0.2.26", optional = false}

[tool.poetry.dev-dependencies]
pre-commit = "^3.4.0"
notebook = "^7.0.6"

[tool.black]
line-length = 120
preview = true
exclude = '''
/(
    \.eggs         # exclude a few common directories in the
  | \.git          # root of the project
  | \.hg
  | \.mypy_cache
  | \.vscode
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | configs
  | .gitlab
  | dist
)/
'''

[tool.ruff]
# all rules can be found here: https://beta.ruff.rs/docs/rules/
select = ["E", "F", "W", "I", "D"]

# max line length for black
line-length = 120

ignore=[
    # space before : (needed for how black formats slicing)
    "E203",
    # do not assign a lambda expression, use a def
    "E731",
    # do not use variables named 'l', 'O', or 'I'
    "E741",
    # unable to detect undefined names
    "F403",
    # imported but unused
    "F401",
    # missing docstring in public module
    "D100",
    # missing docstring in public class
    "D101",
    # missing docstring in public method
    "D102",
    # missing docstring in public function
    "D103",
    # missing docstring in public package
    "D104",
    # missing docstring in magic method
    "D105",
    # missing docstring in `__init__`
    "D107",
]

exclude=[
    ".git",
    "__pycache__",
    "dist",
    ".gitlab",
    "configs",
    "build",
]

[tool.ruff.per-file-ignores]
# It's fine not to put the import at the top of the file in the examples
# folder.
"scripts/*"=["E402"]

[tool.ruff.isort]
# Use a single line after each import block.
lines-after-imports = 2

[tool.nbqa.config]
black = "pyproject.toml"
ruff = "pyproject.toml"

[tool.nbqa.addopts]
ruff = ["--extend-ignore=E402"]

[tool.nbqa.mutate]
black = 1
ruff = 1

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
